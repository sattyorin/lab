<?xml version="1.0"?>
<launch>
  <!-- roslaunch crane_x7_gazebo crane_x7_with_table.launch -->

  <arg name="use_gui" default="false" />
  <arg name="moveit_debug" default="false" />
  <arg name="gazebo_debug" default="false" />
  <arg name="gui" default="true" />
  <arg name="paused" default="false" />
  <arg name="use_sim_time" default="true" />
  <arg name="headless" default="false" />
  <arg name="use_effort_gripper" default="true" />

  <include file="$(find crane_x7_control)/launch/crane_x7_fake_control.launch">
    <arg name="use_effort_gripper" value="$(arg use_effort_gripper)" />
  </include>

  <!-- TODO(sara): building a world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find stir_description)/worlds/stir.world" />
    <arg name="debug" value="$(arg gazebo_debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="verbose" value="true" />
  </include>

  <arg name="robot"
       default="$(find stir_description)/robot/crane_x7_with_tools.urdf.xacro" />
  <param name="robot_description"
         command="$(find xacro)/xacro --inorder '$(arg robot)'" />

  <node name="urdf_spawner"
        pkg="gazebo_ros"
        type="spawn_model"
        respawn="false"
        output="screen"
        args="-urdf -model crane_x7 -param robot_description -z 1.02" />

  <arg name="use_gazebo" default="true" />
  <arg name="fake_execution" default="false" />
  <arg name="port" default="/dev/ttyUSB0" />
  <arg name="robot_description" default="robot_description" />

  <param name="$(arg robot_description)_semantic"
         textfile="$(find stir_description)/config/crane_x7_with_tools.srdf" />
  
  <group ns="$(arg robot_description)_planning">
    <rosparam command="load"
              file="$(find crane_x7_moveit_config)/config/joint_limits.yaml" />
  </group>

  <group ns="$(arg robot_description)_kinematics">
    <rosparam command="load"
              file="$(find crane_x7_moveit_config)/config/kinematics.yaml" />
  </group>

  <node name="joint_state_publisher"
        pkg="joint_state_publisher"
        type="joint_state_publisher"
        unless="$(arg use_gui)">
    <rosparam param="/source_list">[/crane_x7/joint_states]</rosparam>
  </node>
  <node name="joint_state_publisher_gui"
        pkg="joint_state_publisher_gui"
        type="joint_state_publisher_gui"
        if="$(arg use_gui)">
    <rosparam param="/source_list">[/crane_x7/joint_states]</rosparam>
  </node>
  
  <node name="robot_state_publisher"
        pkg="robot_state_publisher"
        type="robot_state_publisher"
        respawn="true"
        output="screen" />

  <include file="$(find crane_x7_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true" />
    <arg name="fake_execution" value="$(arg fake_execution)" />
    <arg name="info" value="true" />
    <arg name="debug" value="$(arg moveit_debug)" />
    <arg name="port" value="$(arg port)" />
    <arg name="use_gazebo" value="$(arg use_gazebo)" />
  </include>

  <include file="$(find crane_x7_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true" />
    <arg name="debug" value="$(arg moveit_debug)" />
  </include>

</launch>
